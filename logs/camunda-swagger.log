[INFO ] 2025-Apr-01 20:53:33.751 ${env:HOSTNAME} [background-preinit] org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 2025-Apr-01 20:53:33.831 ${env:HOSTNAME} [main] org.springframework.boot.StartupInfoLogger - Starting CamundaSwaggerApplication using Java 21.0.2 with PID 8228 (C:\Users\vibhu\OneDrive\Documents\springProjects\camundaSwagger\target\classes started by vibhu in C:\Users\vibhu\OneDrive\Documents\springProjects\camundaSwagger)
[DEBUG] 2025-Apr-01 20:53:33.838 ${env:HOSTNAME} [main] org.springframework.boot.StartupInfoLogger - Running with Spring Boot v3.4.0, Spring v6.2.0
[INFO ] 2025-Apr-01 20:53:33.840 ${env:HOSTNAME} [main] org.springframework.boot.SpringApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2025-Apr-01 20:53:35.269 ${env:HOSTNAME} [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2025-Apr-01 20:53:35.311 ${env:HOSTNAME} [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 0 JPA repository interfaces.
[WARN ] 2025-Apr-01 20:53:35.589 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.camunda.zeebe.spring.client.configuration.AnnotationProcessorConfiguration' of type [io.camunda.zeebe.spring.client.configuration.AnnotationProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry] is declared through a non-static factory method on that class; consider declaring it as static instead.
[WARN ] 2025-Apr-01 20:53:35.621 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deploymentPostProcessor' of type [io.camunda.zeebe.spring.client.annotation.processor.ZeebeDeploymentAnnotationProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.657 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'zeebe.client-io.camunda.zeebe.spring.client.properties.ZeebeClientConfigurationProperties' of type [io.camunda.zeebe.spring.client.properties.ZeebeClientConfigurationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.660 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'camunda.client-io.camunda.zeebe.spring.client.properties.CamundaClientProperties' of type [io.camunda.zeebe.spring.client.properties.CamundaClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.662 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.camunda.zeebe.spring.client.configuration.ZeebeClientAllAutoConfiguration' of type [io.camunda.zeebe.spring.client.configuration.ZeebeClientAllAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.665 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.camunda.zeebe.spring.client.configuration.ExecutorServiceConfiguration' of type [io.camunda.zeebe.spring.client.configuration.ExecutorServiceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.668 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.670 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' of type [org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.675 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'simpleConfig' of type [org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.678 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.680 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'micrometerClock' of type [io.micrometer.core.instrument.Clock$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.716 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'simpleMeterRegistry' of type [io.micrometer.core.instrument.simple.SimpleMeterRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.747 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'zeebeClientThreadPool' of type [io.camunda.zeebe.spring.client.jobhandling.ZeebeClientExecutorService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.761 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'commandExceptionHandlingStrategy' of type [io.camunda.zeebe.spring.client.jobhandling.DefaultCommandExceptionHandlingStrategy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.764 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.camunda.zeebe.spring.client.configuration.ZeebeActuatorConfiguration' of type [io.camunda.zeebe.spring.client.configuration.ZeebeActuatorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[INFO ] 2025-Apr-01 20:53:35.804 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.actuator.MicrometerMetricsRecorder - Enabling Micrometer based metrics for spring-zeebe (available via Actuator)
[WARN ] 2025-Apr-01 20:53:35.805 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'micrometerMetricsRecorder' of type [io.camunda.zeebe.spring.client.actuator.MicrometerMetricsRecorder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.810 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.813 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.817 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.824 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.827 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.832 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.834 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.852 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonMixinModuleEntries' of type [org.springframework.boot.jackson.JsonMixinModuleEntries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.855 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonMixinModule' of type [org.springframework.boot.jackson.JsonMixinModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.858 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.867 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.876 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' of type [org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.878 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.880 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springDataWebSettings' of type [org.springframework.data.web.config.SpringDataWebSettings] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.885 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.891 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.897 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'pageModule' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.899 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.908 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.923 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.926 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.camunda.zeebe.spring.client.configuration.JsonMapperConfiguration' of type [io.camunda.zeebe.spring.client.configuration.JsonMapperConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.929 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'zeebeJsonMapper' of type [io.camunda.zeebe.client.impl.ZeebeObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.933 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterResolverStrategy' of type [io.camunda.zeebe.spring.client.jobhandling.parameter.DefaultParameterResolverStrategy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.935 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resultProcessorStrategy' of type [io.camunda.zeebe.spring.client.jobhandling.result.DefaultResultProcessorStrategy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.941 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jobWorkerManager' of type [io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.974 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'propertyBasedZeebeWorkerValueCustomizer' of type [io.camunda.zeebe.spring.client.properties.PropertyBasedZeebeWorkerValueCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[WARN ] 2025-Apr-01 20:53:35.976 ${env:HOSTNAME} [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'zeebeWorkerPostProcessor' of type [io.camunda.zeebe.spring.client.annotation.processor.ZeebeWorkerAnnotationProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [zeebeAnnotationProcessorRegistry]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
[INFO ] 2025-Apr-01 20:53:36.775 ${env:HOSTNAME} [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
[INFO ] 2025-Apr-01 20:53:36.798 ${env:HOSTNAME} [main] org.apache.juli.logging.DirectJDKLog - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2025-Apr-01 20:53:36.802 ${env:HOSTNAME} [main] org.apache.juli.logging.DirectJDKLog - Starting service [Tomcat]
[INFO ] 2025-Apr-01 20:53:36.803 ${env:HOSTNAME} [main] org.apache.juli.logging.DirectJDKLog - Starting Servlet engine: [Apache Tomcat/10.1.33]
[INFO ] 2025-Apr-01 20:53:36.886 ${env:HOSTNAME} [main] org.apache.juli.logging.DirectJDKLog - Initializing Spring embedded WebApplicationContext
[INFO ] 2025-Apr-01 20:53:36.888 ${env:HOSTNAME} [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2982 ms
[INFO ] 2025-Apr-01 20:53:37.315 ${env:HOSTNAME} [main] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2025-Apr-01 20:53:37.404 ${env:HOSTNAME} [main] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.2.Final
[INFO ] 2025-Apr-01 20:53:37.447 ${env:HOSTNAME} [main] org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
[INFO ] 2025-Apr-01 20:53:37.740 ${env:HOSTNAME} [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
[INFO ] 2025-Apr-01 20:53:37.778 ${env:HOSTNAME} [main] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2025-Apr-01 20:53:38.032 ${env:HOSTNAME} [main] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34ede267
[INFO ] 2025-Apr-01 20:53:38.033 ${env:HOSTNAME} [main] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[WARN ] 2025-Apr-01 20:53:38.095 ${env:HOSTNAME} [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[INFO ] 2025-Apr-01 20:53:38.121 ${env:HOSTNAME} [main] org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[INFO ] 2025-Apr-01 20:53:39.193 ${env:HOSTNAME} [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[INFO ] 2025-Apr-01 20:53:39.196 ${env:HOSTNAME} [main] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2025-Apr-01 20:53:39.255 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.configuration.ZeebeClientProdAutoConfiguration - Creating ZeebeClient using ZeebeClientConfigurationImpl [ZeebeClientConfigurationImpl{properties=ZeebeClientConfigurationProperties{environment=ApplicationServletEnvironment {activeProfiles=[], defaultProfiles=[default], propertySources=[ConfigurationPropertySourcesPropertySource {name='configurationProperties'}, StubPropertySource {name='servletConfigInitParams'}, ServletContextPropertySource {name='servletContextInitParams'}, PropertiesPropertySource {name='systemProperties'}, OriginAwareSystemEnvironmentPropertySource {name='systemEnvironment'}, RandomValuePropertySource {name='random'}, OriginTrackedMapPropertySource {name='Config resource 'class path resource [queries.yaml]' via location 'classpath:queries.yaml''}, OriginTrackedMapPropertySource {name='Config resource 'class path resource [application.yaml]' via location 'optional:classpath:/''}, ApplicationInfoPropertySource {name='applicationInfo'}]}, connectionMode='null', defaultTenantId='<default>', defaultJobWorkerTenantIds=[<default>], applyEnvironmentVariableOverrides=false, enabled=true, broker=Broker{gatewayAddress='http://127.0.0.1:26500, grpcAddress=null, restAddress=null, keepAlive=PT45S}, cloud=Cloud{clusterId='null', clientId='***', clientSecret='***', region='bru-2', scope='null', baseUrl='zeebe.camunda.io', authUrl='https://login.cloud.camunda.io/oauth/token', port=443, credentialsCachePath='null'}, worker=Worker{maxJobsActive=32, threads=1, defaultName='null', defaultType='null', override={}}, message=Message{timeToLive=PT1H, maxMessageSize=4194304}, security=Security{plaintext=true, overrideAuthority='null', certPath='null'}, job=Job{timeout=PT5M, pollInterval=PT0.1S}, ownsJobWorkerExecutor=false, defaultJobWorkerStreamEnabled=false, requestTimeout=PT10S}, camundaClientProperties=io.camunda.zeebe.spring.client.properties.CamundaClientProperties@2a140ce5, jsonMapper=io.camunda.zeebe.client.impl.ZeebeObjectMapper@14b528b6, interceptors=[], chainHandlers=[], zeebeClientExecutorService=io.camunda.zeebe.spring.client.jobhandling.ZeebeClientExecutorService@241fbec}]
[INFO ] 2025-Apr-01 20:53:39.867 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.annotation.processor.ZeebeWorkerAnnotationProcessor - Configuring 1 Zeebe worker(s) of bean 'fetchVariablesWorker': [ZeebeWorkerValue{type='fetchVariables', name='', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=fetchVariablesWorker}, method=public void dev.rugved.camundaSwagger.worker.FetchVariablesWorker.fetchDbQueryParams(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}]
[INFO ] 2025-Apr-01 20:53:39.880 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.annotation.processor.ZeebeWorkerAnnotationProcessor - Configuring 1 Zeebe worker(s) of bean 'hardwareToBeShippedWorker': [ZeebeWorkerValue{type='HardwareToBeShipped', name='', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=hardwareToBeShippedWorker}, method=public void dev.rugved.camundaSwagger.worker.HardwareToBeShippedWorker.hardwareToBeShipped(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}]
[INFO ] 2025-Apr-01 20:53:39.887 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.annotation.processor.ZeebeWorkerAnnotationProcessor - Configuring 1 Zeebe worker(s) of bean 'shipToAddressWorker': [ZeebeWorkerValue{type='shipToAddress', name='', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=shipToAddressWorker}, method=public void dev.rugved.camundaSwagger.worker.ShipToAddressWorker.shipToAddress(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}]
[INFO ] 2025-Apr-01 20:53:39.893 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.annotation.processor.ZeebeWorkerAnnotationProcessor - Configuring 1 Zeebe worker(s) of bean 'WBSHeaderWorker': [ZeebeWorkerValue{type='fetchWBSDetails', name='', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=WBSHeaderWorker}, method=public void dev.rugved.camundaSwagger.worker.WBSHeaderWorker.fetchWBSDetails(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}]
[WARN ] 2025-Apr-01 20:53:39.978 ${env:HOSTNAME} [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[WARN ] 2025-Apr-01 20:53:40.392 ${env:HOSTNAME} [main] io.micrometer.core.instrument.MeterRegistry$Config - A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.
[WARN ] 2025-Apr-01 20:53:40.393 ${env:HOSTNAME} [main] io.micrometer.core.instrument.MeterRegistry$Config - A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.
[WARN ] 2025-Apr-01 20:53:40.394 ${env:HOSTNAME} [main] io.micrometer.core.instrument.MeterRegistry$Config - A MeterFilter is being configured after a Meter has been registered to this registry. All MeterFilters should be configured before any Meters are registered. If that is not possible or you have a use case where it should be allowed, let the Micrometer maintainers know at https://github.com/micrometer-metrics/micrometer/issues/4920. Enable DEBUG level logging on this logger to see a stack trace of the call configuring this MeterFilter.
[INFO ] 2025-Apr-01 20:53:40.942 ${env:HOSTNAME} [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
[INFO ] 2025-Apr-01 20:53:41.022 ${env:HOSTNAME} [main] org.apache.juli.logging.DirectJDKLog - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2025-Apr-01 20:53:41.039 ${env:HOSTNAME} [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
[INFO ] 2025-Apr-01 20:53:41.117 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager - . Starting Zeebe worker: ZeebeWorkerValue{type='fetchVariables', name='fetchVariablesWorker#fetchDbQueryParams', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=fetchVariablesWorker}, method=public void dev.rugved.camundaSwagger.worker.FetchVariablesWorker.fetchDbQueryParams(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[<default>], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}
[INFO ] 2025-Apr-01 20:53:41.136 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager - . Starting Zeebe worker: ZeebeWorkerValue{type='HardwareToBeShipped', name='hardwareToBeShippedWorker#hardwareToBeShipped', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=hardwareToBeShippedWorker}, method=public void dev.rugved.camundaSwagger.worker.HardwareToBeShippedWorker.hardwareToBeShipped(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[<default>], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}
[INFO ] 2025-Apr-01 20:53:41.137 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager - . Starting Zeebe worker: ZeebeWorkerValue{type='shipToAddress', name='shipToAddressWorker#shipToAddress', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=shipToAddressWorker}, method=public void dev.rugved.camundaSwagger.worker.ShipToAddressWorker.shipToAddress(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[<default>], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}
[INFO ] 2025-Apr-01 20:53:41.139 ${env:HOSTNAME} [main] io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager - . Starting Zeebe worker: ZeebeWorkerValue{type='fetchWBSDetails', name='WBSHeaderWorker#fetchWBSDetails', timeout=PT-0.001S, maxJobsActive=-1, requestTimeout=PT-1S, pollInterval=PT-0.001S, autoComplete=true, fetchVariables=[], enabled=true, methodInfo=MethodInfo{classInfo=ClassInfo{beanName=WBSHeaderWorker}, method=public void dev.rugved.camundaSwagger.worker.WBSHeaderWorker.fetchWBSDetails(io.camunda.zeebe.client.api.worker.JobClient,io.camunda.zeebe.client.api.response.ActivatedJob)}, tenantIds=[<default>], forceFetchAllVariables=false, streamEnabled=true, streamTimeout=PT1H, maxRetries=-1}
[INFO ] 2025-Apr-01 20:53:41.157 ${env:HOSTNAME} [main] org.springframework.boot.StartupInfoLogger - Started CamundaSwaggerApplication in 7.839 seconds (process running for 9.029)
[INFO ] 2025-Apr-01 20:53:41.172 ${env:HOSTNAME} [main] dev.rugved.camundaSwagger.Controller.CamundaSwaggerAPI - CamundaSwaggerAPI application has started.
[WARN ] 2025-Apr-01 20:53:41.569 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.571 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.572 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.572 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.573 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.573 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.574 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:41.574 ${env:HOSTNAME} [grpc-nio-worker-ELG-1-11] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:51.832 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:52.003 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:52.018 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:53:52.019 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:02.560 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:02.608 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:02.670 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:02.671 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:13.200 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:13.216 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:13.324 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
[WARN ] 2025-Apr-01 20:54:13.340 ${env:HOSTNAME} [pool-2-thread-1] io.camunda.zeebe.client.impl.ZeebeCallCredentials - The request's security level does not guarantee that the credentials will be confidential.
